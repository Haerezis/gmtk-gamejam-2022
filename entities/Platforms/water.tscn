[gd_scene load_steps=7 format=2]

[ext_resource path="res://entities/Platforms/water.gd" type="Script" id=1]

[sub_resource type="Shader" id=5]
code = "// Kitchen Games / 2D Reflective Water Shader

shader_type canvas_item;

uniform float water_height : hint_range(0.0,1.0);
uniform sampler2D noise;
uniform float wave_frequency : hint_range(0.0, 100.0);
uniform float wave_size : hint_range(0.0, 3.);
uniform float wave_distortion : hint_range(0.0, 3.0);
uniform float wave_speed : hint_range(0.0, 2.0);


uniform vec4 water_color : hint_color;

void fragment()
{	
	vec2 noise_uv = vec2(UV.x + TIME * 0.025,UV.y);
    
	float noise_val = pow(texture(noise, UV).r, 2.0) +0.4;
	
	float water_suface = water_height;
	water_suface += sin(UV.x * wave_frequency + TIME* wave_speed) * wave_size/100.;
	water_suface -= texture(noise, UV).r * 0.05 * wave_distortion;
    water_suface += 0.025*wave_distortion;
	
	vec2 offset = vec2(0., (water_suface + abs(UV.y - water_suface)) - UV.y);

	offset += noise_val* 0.1 - 0.05;
	vec2 SUV = SCREEN_UV;
	
	SUV.y = SUV.y + offset.y * step(UV.y, water_suface);
	
	vec4 col = texture(SCREEN_TEXTURE, SUV);
	COLOR =  mix(col, water_color,  step(UV.y, water_suface)/2.);
}"

[sub_resource type="OpenSimplexNoise" id=7]

[sub_resource type="NoiseTexture" id=8]
noise = SubResource( 7 )

[sub_resource type="ShaderMaterial" id=6]
render_priority = 1
shader = SubResource( 5 )
shader_param/water_height = 0.5
shader_param/wave_frequency = 60.0
shader_param/wave_size = 0.7
shader_param/wave_distortion = 0.1
shader_param/wave_speed = 1.0
shader_param/water_color = Color( 0.27451, 0.298039, 0.92549, 0.403922 )
shader_param/noise = SubResource( 8 )

[sub_resource type="RectangleShape2D" id=9]
extents = Vector2( 0.495, 0.02 )

[node name="Control" type="Node2D"]
script = ExtResource( 1 )

[node name="Node2D" type="Node2D" parent="."]

[node name="ColorRect" type="ColorRect" parent="Node2D"]
material = SubResource( 6 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_right = 1.0
margin_bottom = 1.0
rect_rotation = 180.0
rect_scale = Vector2( 300, 200 )

[node name="Area2D" type="Area2D" parent="Node2D/ColorRect"]
show_behind_parent = true
position = Vector2( 0.5, 0.5 )
collision_layer = 0
collision_mask = 3

[node name="CollisionShape2D" type="CollisionShape2D" parent="Node2D/ColorRect/Area2D"]
shape = SubResource( 9 )

[connection signal="area_entered" from="Node2D/ColorRect/Area2D" to="." method="_on_Area2D_area_entered"]
